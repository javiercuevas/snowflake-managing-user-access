// Step #1
USE ROLE SECURITYADMIN;

CREATE USER SMinder
	PASSWORD = ‘password1234~’
	EMAIL = ‘SMinder@SiestaKeySoftware.com’
	MUST_CHANGE_PASSWORD = TRUE
	EXT_AUTHN_DUO = TRUE
	DISABLE_MFA = FALSE;
	
GRANT ROLE ACCOUNTADMIN TO USER SMinder

// Step #3

USE ROLE ACCOUNTADMIN;

CREATE RESOURCE MONITOR MONITOR_250_CREDITS
    WITH CREDIT_QUOTA = 250         -- Number of credits allocated to the monitor per frequency interval
    FREQUENCY = MONTHLY             -- Frequence interval
    START_TIMESTAMP = IMMEDIATELY   -- Start right away. Could specifiy a start timestamp
    TRIGGERS ON 100 PERCENT         -- Trigger fires when 100%. A number greater than 100 could be entered
    DO NOTIFY;                      -- Send an alert (to all users who have enabled notifications for themselves), but do not take any other action.
    
CREATE RESOURCE MONITOR MONITOR_300_CREDITS
    WITH CREDIT_QUOTA = 300
    FREQUENCY = MONTHLY
    START_TIMESTAMP = IMMEDIATELY
    TRIGGERS ON 100 PERCENT 
    DO SUSPEND;                     -- Suspend all assigned warehouses while allowing currently running queries to complete
    
CREATE RESOURCE MONITOR MONITOR_375_CREDITS
    WITH CREDIT_QUOTA = 375
    FREQUENCY = MONTHLY
    START_TIMESTAMP = IMMEDIATELY
    TRIGGERS ON 100 PERCENT 
    DO SUSPEND_IMMEDIATE;           -- Suspend all assigned warehouses immediately and cancel any currently running queries or statements using the warehouses
    

// Step #4
// Create the roles
USE ROLE SECURITYADMIN;

CREATE ROLE DBA;
CREATE ROLE DEVELOPER;
CREATE ROLE INGESTION;
CREATE ROLE ANALYST;
CREATE ROLE BI;

// Create the hierarchy
USE ROLE SECURITYADMIN;

GRANT ROLE DBA TO ROLE SYSADMIN;
GRANT ROLE ANALYST TO ROLE DBA;
GRANT ROLE DEVELOPER TO ROLE DBA;
GRANT ROLE INGESTION TO ROLE DEVELOPER;
GRANT ROLE BI TO ROLE ANALYST;

// Grant some privileges
USE ROLE SYSADMIN;

GRANT CREATE DATABASE ON ACCOUNT TO ROLE DBA;
GRANT CREATE WAREHOUSE ON ACCOUNT TO ROLE DBA;

// Grant some roles to users
USE ROLE SECURITYADMIN;

GRANT ROLE SECURITYADMIN TO USER LMinder;
GRANT ROLE DBA TO USER RXminder;
GRANT ROLE DEVELOPER TO USER LKminder;
GRANT ROLE ANALYST TO USER MKminder;
GRANT ROLE BI TO USER MKminder;

// Set default roles for each user
USE ROLE SECURITYADMIN;

ALTER USER Lminder SET DEFAULT_ROLE = SECURITYADMIN;
ALTER USER RXminder SET DEFAULT_ROLE = DBA;
ALTER USER LKminder SET DEFAULT_ROLE = DEVELOPER;
ALTER USER MKminder SET DEFAULT_ROLE = ANALYST;
ALTER USER Sminder SET DEFAULT_ROLE = DEVELOPER;

// Step #5
USE ROLE DBA;

// Create the first warehouse
CREATE WAREHOUSE COMPUTE_SMALL 
    WITH WAREHOUSE_SIZE = SMALL
    MAX_CLUSTER_COUNT = 2
    SCALING_POLICY = ECONOMY
    AUTO_SUSPEND = 120
    ALTER RESUME = TRUE
    COMMENT = ‘Initial default warehouse.’;

// Grant usage to the warehouse for the various roles. If we didn't do this, no one would be able
// to use the warehouses. Note, we're assigning privileges to the base roles. Because of our role
// hierarchy, other roles will be able to use them.
USE ROLE DBA;

GRANT USAGE, OPERATE ON WAREHOUSE COMPUTE_SMALL TO ROLE INGESTION;
GRANT USAGE, OPERATE ON WAREHOUSE COMPUTE_SMALL TO ROLE BI;

// Lock down the Snowflake provided warehouses
REVOKE MODIFY ON WAREHOUSE DEMO_WH FROM ROLE PUBLIC;
REVOKE MODIFY ON WAREHOUSE LOAD_WH FROM ROLE PUBLIC;

// Set default warehouses
USE ROLE SECURITYADMIN;

ALTER USER MKminder SET DEFAULT_WAREHOUSE = COMPUTE_SMALL;
ALTER USER Lminder SET DEFAULT_WAREHOUSE = COMPUTE_SMALL;
ALTER USER Sminder SET DEFAULT_WAREHOUSE = COMPUTE_SMALL;
ALTER USER RXminder SET DEFAULT_WAREHOUSE = COMPUTE_SMALL;

// Step #6
USE ROLE DBA;

// Create a sandbox database
CREATE OR REPLACE TRANSIENT DATABASE SANDBOX;
GRANT USAGE ON DATABASE SANDBOX TO ROLE INGESTION;
GRANT USAGE ON DATABASE SANDBOX TO ROLE BI;

// Create a sandbox schema
USE ROLE DBA;

CREATE OR REPLACE TRANSIENT SCHEMA PLAYTIME;

// Define the grants as follows:
GRANT USAGE ON SCHEMA PLAYTIME TO ROLE INGESTION;
GRANT USAGE ON SCHEMA PLAYTIME TO ROLE BI;
GRANT ALL PRIVILEGES ON FUTURE TABLES IN SCHEMA PLAYTIME TO ROLE INGESTION;
GRANT ALL PRIVILEGES ON FUTURE TABLES IN SCHEMA PLAYTIME TO ROLE BI;
GRANT SELECT ON FUTURE TABLES IN SCHEMA PLAYTIME TO ROLE BI;
GRANT ALL PRIVILEGES ON FUTURE VIEWS IN SCHEMA PLAYTIME TO ROLE INGESTION;
GRANT ALL PRIVILEGES ON FUTURE VIEWS IN SCHEMA PLAYTIME TO ROLE BI;
GRANT SELECT ON FUTURE VIEWS IN SCHEMA PLAYTIME TO ROLE BI;
GRANT ALL PRIVILEGES ON FUTURE STAGES IN SCHEMA PLAYTIME TO ROLE INGESTION;
GRANT ALL PRIVILEGES ON FUTURE FILE FORMATS IN SCHEMA PLAYTIME TO ROLE INGESTION;
GRANT ALL PRIVILEGES ON FUTURE STAGES IN SCHEMA PLAYTIME TO ROLE BI;
GRANT ALL PRIVILEGES ON FUTURE FILE FORMATS IN SCHEMA PLAYTIME TO ROLE BI;


